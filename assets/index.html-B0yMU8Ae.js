import{_ as a,c as t,a as n,o as e}from"./app-vo1rYq2c.js";const p={};function m(i,s){return e(),t("div",null,s[0]||(s[0]=[n('<h2 id="标准pwm" tabindex="-1"><a class="header-anchor" href="#标准pwm"><span>标准pwm</span></a></h2><p>对于无刷电调，pwm一般使用高电平脉宽代表油门百分比，一般来说，脉宽的范围是1<sub>2ms对应油门0</sub>100%。</p><p><img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/pwm.png" alt=""></p><p>由于满油门需要在一个周期保证2ms高电平，因此最大控制频率为500hz。当然一个周期里不能只有高电平，每个周期后面跟一个在跟一个时间非常短的低电平，pwm频率适当降低（比如490hz）。</p><p>常见的pwm控制频率为 50~490hz。</p><p>对于电机控制来说有，有一些特殊的脉宽含义 900 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span> Disable 电机 最小pwm油门，一些电机需要一个最小油门才开始转 px4默认值1075</p><h2 id="oneshot125" tabindex="-1"><a class="header-anchor" href="#oneshot125"><span>Oneshot125</span></a></h2><p>onesshot 是pwm的另一种实现，能够提高电机控制频率，对于oneshot125协议来说，其相当于把1~2ms的脉宽缩放至125<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span>~250<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span>,缩放公式如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mn>125</mn><mo>⋅</mo><mfrac><mi>x</mi><mn>1000</mn></mfrac><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>1000</mn><mo separator="true">,</mo><mn>2000</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex"> y=125\\cdot\\frac{x}{1000},x\\in[1000,2000] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">125</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1000</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1000</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2000</span><span class="mclose">]</span></span></span></span></span></p><p>那么对于900 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span> Disable 信号，缩放后为112.5<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span>。</p><p>在px4 1.13的固件的四旋翼机型中，默认状态使用了oneshot125而不是标准pwm，因为对于1.13固件，PWM_MAIN_RATE 默认为0， <img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted image 20240402133548.png" alt=""> 但是虽然使用了oneshot125，但是事实的控制频率并没有提高，依然为400hz，虽然高电平脉宽<strong>是正常的</strong>，但是周期波动却非常大。</p><p><img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted image 20240402134506.png" alt=""></p><p>与之相比 nxtpx4的固件周期就稳定多了，控制频率也达到了2khz <img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted image 20240402134349.png" alt=""> 作为参考，以下是 betaflight pwm输出(400hz)的周期情况 <img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted image 20240402134721.png" alt=""></p><h1 id="dshot" tabindex="-1"><a class="header-anchor" href="#dshot"><span>Dshot</span></a></h1><p>dshot就和pwm完全不同了，这是一种数字协议.</p><h2 id="帧格式" tabindex="-1"><a class="header-anchor" href="#帧格式"><span>帧格式</span></a></h2><p>每帧数据由16bit组成。包含</p><ul><li>11 bit 油门值: 一共2048个值，0被保留作为disarmed。1-47 作为特殊指令。剩下48~2047作为油门值，分辨率是2000（Steps）；</li><li>1 bit <strong>Telemetry request</strong> ： 如果设置了此选项，telemetry数据将通过单独的通道发送回来。</li><li><strong>4 bit CRC</strong> 校验:。 也就是结构如下：</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>SSSSSSSSSSSTCCCC</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>特殊指令含义如下 1-5：beep（1= low freq. 5 = high freq） 6： esc信息请求（fw版本和通过tlm线发送的SN） 7：一个方向旋转 8：另一个方向旋转 9：3d模式关闭 10：3d模式打开 11：esc设置请求（saved settings over the TLM wire） 12：保存设置</p><h2 id="_0和1的表示" tabindex="-1"><a class="header-anchor" href="#_0和1的表示"><span>0和1的表示</span></a></h2><p>Dshot 通过每个周期(period time)的高电平维持时间来表示0或1。在Dshot中，1的高电平维持时间是0的高电平维持时间的2倍。以Dshot600为例，0的高电平(T0H)时间为625ns，1的高电平时间(T1H)为1250ns。</p><p><img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/pwm.png" alt=""> 而每个周期（period time，每位数据传输时间）的时间由具体的协议规定，依然以Dshot600为例，其中的600代表的是1ms可传输的bit数，也就是每个bit为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>600</mn></mfrac><mi>m</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\\frac{1}{600} ms</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">600</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span></span></span></span> ,也就是1.67us( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mn>0</mn><mi>H</mi><mo>+</mo><mi>T</mi><mn>0</mn><mi>L</mi></mrow><annotation encoding="application/x-tex">T0H+T0L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">0</span><span class="mord mathnormal">L</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mn>1</mn><mi>H</mi><mo>+</mo><mi>T</mi><mn>1</mn><mi>L</mi></mrow><annotation encoding="application/x-tex">T1H+T1L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">1</span><span class="mord mathnormal">L</span></span></span></span> )。 知道了每个周期的时间不难算出最大数据带宽和控制频率，即最大传输带宽为600khz。控制频率可达 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>600</mn><mn>16</mn></mfrac></mrow><annotation encoding="application/x-tex">\\frac{600}{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">600</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 为37.5khz。</p><p>常用Dshot协议的关键参数如下。</p><table><thead><tr><th>DSHOT</th><th>Bitrate</th><th>T1H</th><th>T0H</th><th>Bit period time (µs)</th><th>Frame (µs)</th></tr></thead><tbody><tr><td>150</td><td>150kbit/s</td><td>5.00</td><td>2.50</td><td>6.67</td><td>106.72</td></tr><tr><td>300</td><td>300kbit/s</td><td>2.50</td><td>1.25</td><td>3.33</td><td>53.28</td></tr><tr><td>600</td><td>600kbit/s</td><td>1.25</td><td>0.625</td><td>1.67</td><td>26.72</td></tr><tr><td>1200</td><td>1200kbit/s</td><td>0.625</td><td>0.313</td><td>0.83</td><td>13.28</td></tr></tbody></table><h2 id="esc-telemetry" tabindex="-1"><a class="header-anchor" href="#esc-telemetry"><span>ESC Telemetry</span></a></h2><blockquote><p><strong>这种查询方式几乎已经过时，而且速度太慢，无法做任何有意义的事情</strong></p></blockquote><p>上述帧格式中提到了 Telemetry bit, 它用于向ESC请求信息，比如 ESC 的温度，或电机旋转的 eRPM、电流消耗和电压。</p><blockquote><p>注意：ESC 遥测不是双向 DSHOT，并且通信速度太慢，RPM 过滤无法正常工作。</p></blockquote><p>ESC 遥测需要单独的电线将信息传输回飞行控制器。它通常仅适用于 KISS 和 BLHELI_32 电调。连接飞行控制器的电线可以在多个 ESC 之间共享，并连接到未使用的 UART 的 TX 引脚（用于半双工通信）。</p><p>它实际上并不是 DSHOT 的一部分,详细规范可以在 <a href="http://www.rcgroups.com/forums/showatt.php?attachmentid=8524039&amp;d=1450424877" target="_blank" rel="noopener noreferrer">rcGroups thread</a> 中找到。</p><h2 id="双向dshot" tabindex="-1"><a class="header-anchor" href="#双向dshot"><span>双向Dshot</span></a></h2><blockquote><p>双向 DSHOT 仅适用于 DSHOT 300 及更高版本。</p></blockquote><p>双向 DSHOT 也称为反相 DSHOT，因为信号电平是反相的，因此 1 为低电平，0 为高电平。<strong>这样做是为了让 ESC 知道我们正在双向模式下运行并且它应该发回 eRPM Telemetry数据包</strong>。 启用双向 DHSOT 后，对于发送到 ESC 的每个帧，都会返回带有 eRPM 遥测数据的帧（在同一线路上，而不是另外的遥测线路上），从而将每秒可以发送的帧量减半。</p><p>一旦飞控发送完指令帧，它就会切换到接收模式并等待 ESC 返回 eRPM 帧。发送完指令帧后，有 30μs 的中断时间来切换线路、DMA 和计时器，以便转换成接收模式。</p><h3 id="erpm-帧" tabindex="-1"><a class="header-anchor" href="#erpm-帧"><span>eRPM 帧</span></a></h3><p>ESC在双向DSHOT模式下发送的eRPM遥测帧也是16位值，因此与接收到的帧大小相同，但结构不同：</p><ul><li><strong>12 bit</strong>: eRPM Data 12 位：eRPM 数据</li><li><strong>4 bit</strong>: CRC 4位：CRC</li></ul><p>但是eRPM 数据的编码并不像油门帧的编码那么简单:</p><ul><li><strong>3 bit</strong>：以下值需要左移以获得以 µs 为单位的周期的量</li><li><strong>9 bit</strong>: 周期基数 具体的这里不再详述，请看参考资料2</li></ul><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><ol><li>https://docs.px4.io/main/en/peripherals/esc_motors.html</li><li>https://brushlesswhoop.com/dshot-and-bidirectional-dshot/</li></ol>',42)]))}const o=a(p,[["render",m],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/px4code/driver/6h4y4yda/","title":"esc_protocol","lang":"zh-CN","frontmatter":{"title":"esc_protocol","createTime":"2024/09/09 16:56:27","permalink":"/px4code/driver/6h4y4yda/","description":"标准pwm 对于无刷电调，pwm一般使用高电平脉宽代表油门百分比，一般来说，脉宽的范围是12ms对应油门0100%。 由于满油门需要在一个周期保证2ms高电平，因此最大控制频率为500hz。当然一个周期里不能只有高电平，每个周期后面跟一个在跟一个时间非常短的低电平，pwm频率适当降低（比如490hz）。 常见的pwm控制频率为 50~490hz。 对于...","head":[["meta",{"property":"og:url","content":"https://hyaline.qyswarm.top/px4code/driver/6h4y4yda/"}],["meta",{"property":"og:site_name","content":"Reflections of Hyaline"}],["meta",{"property":"og:title","content":"esc_protocol"}],["meta",{"property":"og:description","content":"标准pwm 对于无刷电调，pwm一般使用高电平脉宽代表油门百分比，一般来说，脉宽的范围是12ms对应油门0100%。 由于满油门需要在一个周期保证2ms高电平，因此最大控制频率为500hz。当然一个周期里不能只有高电平，每个周期后面跟一个在跟一个时间非常短的低电平，pwm频率适当降低（比如490hz）。 常见的pwm控制频率为 50~490hz。 对于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/pwm.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T14:14:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-20T14:14:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"esc_protocol\\",\\"image\\":[\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/pwm.png\\",\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted%20image%2020240402133548.png\\",\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted%20image%2020240402134506.png\\",\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted%20image%2020240402134349.png\\",\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/Pasted%20image%2020240402134721.png\\",\\"https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/hao_doc/pwm.png\\"],\\"dateModified\\":\\"2024-10-20T14:14:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"标准pwm","slug":"标准pwm","link":"#标准pwm","children":[]},{"level":2,"title":"Oneshot125","slug":"oneshot125","link":"#oneshot125","children":[]},{"level":2,"title":"帧格式","slug":"帧格式","link":"#帧格式","children":[]},{"level":2,"title":"0和1的表示","slug":"_0和1的表示","link":"#_0和1的表示","children":[]},{"level":2,"title":"ESC Telemetry","slug":"esc-telemetry","link":"#esc-telemetry","children":[]},{"level":2,"title":"双向Dshot","slug":"双向dshot","link":"#双向dshot","children":[{"level":3,"title":"eRPM 帧","slug":"erpm-帧","link":"#erpm-帧","children":[]}]}],"readingTime":{"minutes":4.68,"words":1403},"git":{"createdTime":1725899925000,"updatedTime":1729433657000,"contributors":[{"name":"hyaline-wang","email":"hyaline-wang","commits":1}]},"autoDesc":true,"filePathRelative":"notes/px4code/驱动相关/esc_protocol.md"}');export{o as comp,c as data};
