import{_ as i,c as a,a as e,o as n}from"./app-vo1rYq2c.js";const l={};function t(p,s){return n(),a("div",null,s[0]||(s[0]=[e(`<blockquote><p>开始前，请确保已经安装了docker</p></blockquote><p>主机环境</p><ul><li>ubuntu 20.04 5.15.0-117-generic</li></ul><p>此章节有3个作用</p><ol><li>构建基于docker的px4的编译环境</li><li>构建docker下 <code>gazebo + ros</code>的仿真环境</li><li>构建docker下 <code>gazebo</code> + 主机 <code>ros</code>的联合仿真环境</li></ol><h2 id="下载源码" tabindex="-1"><a class="header-anchor" href="#下载源码"><span>下载源码</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker_px4</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker_px4</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 国内下载大概率</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --recursive</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建docker-container" tabindex="-1"><a class="header-anchor" href="#构建docker-container"><span>构建docker container</span></a></h2><p>启动docker容器的命令添加了很多参数，是为了在能够正常显示gazebo</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span># enable access to xhost from the container</span></span>
<span class="line"><span>xhost +</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Run docker and open bash shell</span></span>
<span class="line"><span>docker run -it --privileged \\</span></span>
<span class="line"><span>--env=LOCAL_USER_ID=&quot;$(id -u)&quot; \\</span></span>
<span class="line"><span>-v $(pwd)/PX4-Autopilot:/PX4-Autopilot/:rw \\</span></span>
<span class="line"><span>-v /tmp/.X11-unix:/tmp/.X11-unix:ro \\</span></span>
<span class="line"><span>-e DISPLAY=:0 \\</span></span>
<span class="line"><span>--network host \\</span></span>
<span class="line"><span>--name=px4-ros px4io/px4-dev-ros-noetic:2022-07-31 bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动gazebo仿真" tabindex="-1"><a class="header-anchor" href="#启动gazebo仿真"><span>启动gazebo仿真</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> px4_sitl_default</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gazebo-classic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>Found Java: /usr/bin/java (found version &quot;1.8.0_292&quot;) </code> 非常慢 3分钟左右</p><h2 id="显示问题修复" tabindex="-1"><a class="header-anchor" href="#显示问题修复"><span>显示问题修复</span></a></h2><blockquote><p>gazebo 显示不出来</p></blockquote><p>当发现gazebo帧率过低时，证明是使用cpu渲染，可通过以下步骤使用Nvidia Gpu。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> libgl1-mesa-glx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> libgl1-mesa-dri</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动镜像的命令做如下修改</p><h2 id="使用nvidia-显卡加速" tabindex="-1"><a class="header-anchor" href="#使用nvidia-显卡加速"><span>使用nvidia 显卡加速</span></a></h2><p>使用 nvidia 显卡</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># enable access to xhost from the container</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">xhost</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> +</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Run docker and open bash shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --privileged</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--env=LOCAL_USER_ID=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">id</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -u</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-v </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">$(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">pwd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/PX4-Autopilot:/PX4-Autopilot/:rw</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-v </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/tmp/.X11-unix:/tmp/.X11-unix:ro</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-e </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">DISPLAY=:1</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--gpus </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">all</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--runtime=nvidia </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--env=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">QT_X11_NO_MITSHM=1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-e </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">NVIDIA_DRIVER_CAPABILITIES=all</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--network </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">host</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--name=px4-ros-gpu </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">px4io/px4-dev-ros-noetic:2022-07-31</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const h=i(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/px4code/wno3ydw8/","title":"构建px4 docker环境","lang":"zh-CN","frontmatter":{"title":"构建px4 docker环境","createTime":"2024/09/09 13:24:35","permalink":"/px4code/wno3ydw8/","description":"开始前，请确保已经安装了docker 主机环境 ubuntu 20.04 5.15.0-117-generic 此章节有3个作用 构建基于docker的px4的编译环境 构建docker下 gazebo + ros的仿真环境 构建docker下 gazebo + 主机 ros的联合仿真环境 下载源码 构建docker container 启动docke...","head":[["meta",{"property":"og:url","content":"https://hyaline.qyswarm.top/px4code/wno3ydw8/"}],["meta",{"property":"og:site_name","content":"Reflections of Hyaline"}],["meta",{"property":"og:title","content":"构建px4 docker环境"}],["meta",{"property":"og:description","content":"开始前，请确保已经安装了docker 主机环境 ubuntu 20.04 5.15.0-117-generic 此章节有3个作用 构建基于docker的px4的编译环境 构建docker下 gazebo + ros的仿真环境 构建docker下 gazebo + 主机 ros的联合仿真环境 下载源码 构建docker container 启动docke..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T14:14:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-20T14:14:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"构建px4 docker环境\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T14:14:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"下载源码","slug":"下载源码","link":"#下载源码","children":[]},{"level":2,"title":"构建docker container","slug":"构建docker-container","link":"#构建docker-container","children":[]},{"level":2,"title":"启动gazebo仿真","slug":"启动gazebo仿真","link":"#启动gazebo仿真","children":[]},{"level":2,"title":"显示问题修复","slug":"显示问题修复","link":"#显示问题修复","children":[]},{"level":2,"title":"使用nvidia 显卡加速","slug":"使用nvidia-显卡加速","link":"#使用nvidia-显卡加速","children":[]}],"readingTime":{"minutes":1.18,"words":354},"git":{"createdTime":1725899925000,"updatedTime":1729433657000,"contributors":[{"name":"hyaline-wang","email":"hyaline-wang","commits":1}]},"autoDesc":true,"filePathRelative":"notes/px4code/代码构建/px4_docker.md"}');export{h as comp,r as data};
